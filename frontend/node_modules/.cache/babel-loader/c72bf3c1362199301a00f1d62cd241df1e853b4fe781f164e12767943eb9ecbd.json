{"ast":null,"code":"var _jsxFileName = \"/Users/abeehazara/Documents/GitHub/DAPP_Testing/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [storedPrice, setStoredPrice] = useState('');\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  var signer;\n  const connectWallet = async () => {\n    await provider.send('eth_requestAccounts', []);\n  };\n  signer = provider.getSigner();\n  connectWallet();\n  const contractAddress = '0xe45e06972fcc503d73de059bb267d34a4d7ae390';\n  const ABI = '[{\"inputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"constructor\"},{\"inputs\": [],\"name\": \"getLatestPrice\",\"outputs\": [{\"internalType\": \"int256\",\"name\": \"\",\"type\": \"int256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"storeLatestPrice\",\"outputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"storedPrice\",\"outputs\": [{\"internalType\": \"int256\",\"name\": \"\",\"type\": \"int256\"}],\"stateMutability\": \"view\",\"type\": \"function\"}]';\n  const contract = new ethers.Contract(contractAddress, ABI, signer);\n  const getStoredPrice = async () => {\n    try {\n      const contractPrice = await contract.storedPrice();\n      setStoredPrice(parseInt(contractPrice) / 100000000);\n    } catch (error) {\n      console.log(\"getStoredPrice Error: \", error);\n    }\n  };\n  async function updateNewPrice() {\n    try {\n      const transaction = await contract.storeLatestPrice();\n      console.log(\"update called\");\n      await transaction.wait();\n      await getStoredPrice();\n    } catch (error) {\n      console.log(\"updateNewPrice Error: \", error);\n    }\n  }\n  getStoredPrice().catch(console.error, \"errorhere\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Stored Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Stored ETH/USD Price: \", storedPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Update Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-dark\",\n          onClick: updateNewPrice,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"7JuS05SI97N8kgdJkm66BnzV4ws=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ethers","App","storedPrice","setStoredPrice","provider","providers","Web3Provider","window","ethereum","signer","connectWallet","send","getSigner","contractAddress","ABI","contract","Contract","getStoredPrice","contractPrice","parseInt","error","console","log","updateNewPrice","transaction","storeLatestPrice","wait","catch"],"sources":["/Users/abeehazara/Documents/GitHub/DAPP_Testing/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ethers } from \"ethers\";\nfunction App() {\n    const [storedPrice, setStoredPrice] = useState('');\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    var signer ;\n    const connectWallet = async () => {\n        await provider.send('eth_requestAccounts', []);\n        \n\n        }\n    signer = provider.getSigner();\n    connectWallet();\n    const contractAddress = '0xe45e06972fcc503d73de059bb267d34a4d7ae390';\n    const ABI = '[{\"inputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"constructor\"},{\"inputs\": [],\"name\": \"getLatestPrice\",\"outputs\": [{\"internalType\": \"int256\",\"name\": \"\",\"type\": \"int256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"storeLatestPrice\",\"outputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"storedPrice\",\"outputs\": [{\"internalType\": \"int256\",\"name\": \"\",\"type\": \"int256\"}],\"stateMutability\": \"view\",\"type\": \"function\"}]'\n    const contract = new ethers.Contract(contractAddress, ABI, signer);\n    const getStoredPrice = async () => {\n        try {\n          const contractPrice = await contract.storedPrice();\n          setStoredPrice(parseInt(contractPrice) / 100000000);\n        } catch (error) {\n          console.log(\"getStoredPrice Error: \", error);\n        }\n      }\n    \n      async function updateNewPrice() {\n        try {\n          const transaction = await contract.storeLatestPrice();\n          console.log(\"update called\")\n          await transaction.wait();\n          await getStoredPrice();\n        } catch (error) {\n          console.log(\"updateNewPrice Error: \", error);\n        }\n    \n      }\n    \n      getStoredPrice()\n      .catch(console.error,\"errorhere\")\n      \n      return (\n        <div className=\"container\">\n          <div className=\"row mt-5\">\n    \n            <div className=\"col\">\n              <h3>Stored Price</h3>\n              <p>Stored ETH/USD Price: {storedPrice}</p>\n            </div>\n    \n            <div className=\"col\">\n              <h3>Update Price</h3>\n              <button type=\"submit\" className=\"btn btn-dark\" \n    onClick={updateNewPrice}>Update</button>\n            </div>\n          </div>\n        </div>\n      );\n \n}\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAAC;AAChC,SAASC,GAAG,GAAG;EAAA;EACX,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMK,QAAQ,GAAG,IAAIJ,MAAM,CAACK,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;EACnE,IAAIC,MAAM;EACV,MAAMC,aAAa,GAAG,YAAY;IAC9B,MAAMN,QAAQ,CAACO,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;EAG9C,CAAC;EACLF,MAAM,GAAGL,QAAQ,CAACQ,SAAS,EAAE;EAC7BF,aAAa,EAAE;EACf,MAAMG,eAAe,GAAG,4CAA4C;EACpE,MAAMC,GAAG,GAAG,keAAke;EAC9e,MAAMC,QAAQ,GAAG,IAAIf,MAAM,CAACgB,QAAQ,CAACH,eAAe,EAAEC,GAAG,EAAEL,MAAM,CAAC;EAClE,MAAMQ,cAAc,GAAG,YAAY;IAC/B,IAAI;MACF,MAAMC,aAAa,GAAG,MAAMH,QAAQ,CAACb,WAAW,EAAE;MAClDC,cAAc,CAACgB,QAAQ,CAACD,aAAa,CAAC,GAAG,SAAS,CAAC;IACrD,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,eAAeG,cAAc,GAAG;IAC9B,IAAI;MACF,MAAMC,WAAW,GAAG,MAAMT,QAAQ,CAACU,gBAAgB,EAAE;MACrDJ,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,MAAME,WAAW,CAACE,IAAI,EAAE;MACxB,MAAMT,cAAc,EAAE;IACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAAC;IAC9C;EAEF;EAEAH,cAAc,EAAE,CACfU,KAAK,CAACN,OAAO,CAACD,KAAK,EAAC,WAAW,CAAC;EAEjC,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,uBACxB;MAAK,SAAS,EAAC,UAAU;MAAA,wBAEvB;QAAK,SAAS,EAAC,KAAK;QAAA,wBAClB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAqB,eACrB;UAAA,qCAA0BlB,WAAW;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACtC,eAEN;QAAK,SAAS,EAAC,KAAK;QAAA,wBAClB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAqB,eACrB;UAAQ,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAC,cAAc;UACxD,OAAO,EAAEqB,cAAe;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1B;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAGd;AAAC,GAxDQtB,GAAG;AAAA,KAAHA,GAAG;AAyDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}